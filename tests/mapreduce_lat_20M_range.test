[test_case]
test = perfrunner.tests.mapreduce.MapreduceQueryLatencyTest
title = 1 node, 20M docs, 3 views, 100 updates/sec, 100 queries/sec, stale=false, range queries
summary = Write-only query test, 1 node, 1 bucket x 20M x 1KB, 3 views, 100 sets/sec, 100 qps
larger_is_better = false

[stats]

[cluster]
mem_quota = 204800
initial_nodes = 1
num_buckets = 1

[bucket]
replica_number = 0

[compaction]
db_percentage = 10

[load]
items = 20000000
size = 1024
workers = 20
doc_gen = new

[mapreduce]
indexes =
    range::{"views":{"name_by_coins":{"map":"function(doc, meta) {emit(doc.coins.f, doc.name.f.f.f);}"},"email_by_achievement_and_category":{"map":"function(doc, meta) {emit([doc.achievements[0], doc.category], doc.email.f.f);}"},"street_by_year_and_coins":{"map":"function(doc, meta) {emit([doc.year, doc.coins.f], doc.street.f.f);}"}}}
view_names =
    range::name_by_coins
    range::email_by_achievement_and_category
    range::street_by_year_and_coins
params = {"stale": "false"}
throughput = 100
workers = 1

[access]
creates = 0
reads = 0
updates = 100
deletes = 0
throughput = 100
items = 20000000
workers = 1
time = 3600

[worker_settings]
